{"version":3,"file":"template-exporer.js","sources":["../src/parse.js"],"sourcesContent":["const PreBlock = /^\\<\\%(?:\\s?)+\\w+.*\\%\\>/\nconst EndBlock = /^<%(\\s?)+}{1}(\\s?)+ %>/\nconst EqualBlock = /^<%(?:\\s?)+=(?:\\s?)+(\\w+).*%>/\nconst TEXT = /^[\\w\\s]+/\nconst PreTag = /^\\<\\w+.*\\>/\nconst EndTag = /^\\<\\/\\w+.*\\>/\n\n\nconst Condition = /<%(?:\\s?)+(\\w+)(?:\\s?)+\\((.*)\\).*%>/\n\nconst HasChildBlock = ['if', 'for']\n\nclass Token {\n    constructor(type, value = '') {\n        this.type = type;\n        this.value = value\n    }\n}\n\nfunction compile(template) {\n    let code = template\n    let nodes = []\n    let matchedText = ''\n    while (code) {\n        let node;\n        code = code.trim();\n        if (node = code.match(PreTag)) {\n            matchedText = node[0]\n            nodes.push(new Token('PreTag', matchedText))\n        } else if (node = code.match(TEXT)) {\n            matchedText = node[0].trim()\n            nodes.push(new Token('TEXT', matchedText))\n        } else if (node = code.match(PreBlock)) {\n            matchedText = node[0]\n            nodes.push(new Token('PreBlock', matchedText))\n        } else if (node = code.match(EndBlock)) {\n            matchedText = node[0]\n            nodes.push(new Token('EndBlock', matchedText))\n        } else if (node = code.match(EqualBlock)) {\n            matchedText = node[0]\n            nodes.push(new Token('EqualBlock', matchedText))\n        } else if (node = code.match(EndTag)) {\n            matchedText = node[0]\n            nodes.push(new Token('EndTag', matchedText))\n        }\n        code = code.slice(matchedText.length)\n        node = null\n    }\n    return nodes\n\n}\n\n\nfunction parseEqualBlock(tokens) {\n    const [node, eTokens] = eat('EqualBlock', tokens)\n    const variable = node.value.match(EqualBlock)\n    return [{\n        type: 2,\n        item: variable[1]\n    }, eTokens]\n}\n\nfunction parseBlock(tokens, parent) {\n    debugger\n    let tailTokens = tokens;\n    let blocks = []\n    while (check('PreBlock', tailTokens) || check('EqualBlock', tailTokens) || check('PreTag', tailTokens)) {\n        let block = {\n            type: 2,\n            children: []\n        }\n        let eBlock\n        let node;\n        if (check('PreBlock', tailTokens)) {\n            [node, tailTokens] = eat('PreBlock', tailTokens)\n            const condition = node.value.match(Condition)\n            block.tag = condition[1]\n            block.item = condition[2]\n        }\n        if (check('PreTag', tailTokens)) {\n            [eBlock, tailTokens] = parseTag(tailTokens, block)\n            block.children.push(eBlock)\n        }\n\n        if (check('EqualBlock', tailTokens)) {\n            [eBlock, tailTokens] = parseEqualBlock(tailTokens)\n            block.children.push(eBlock)\n        }\n        if (check('EndBlock', tailTokens)) {\n            [, tailTokens] = eat('EndBlock', tailTokens)\n        }\n        blocks.push(block)\n    }\n\n    return [blocks, tailTokens]\n}\n\nfunction parseTag(tokens, parent) {\n    debugger\n    let tailTokens = tokens;\n    let tags = []\n    while (check('PreTag', tailTokens) || check('EndTag', tailTokens) || check('TEXT', tailTokens) || check('PreBlock', tailTokens)) {\n        let tag = {\n            type: 1,\n            text: '',\n            children: []\n        }\n        let node;\n        if (check('PreTag', tailTokens)) {\n            [node, tailTokens] = eat('PreTag', tailTokens);\n            if (node.value === \"<span>\") {\n                console.log(parent)\n                debugger\n            }\n            tag.text = node.value;\n        }\n        if (check('PreBlock', tailTokens)) {\n            let nChildren = [];\n            [nChildren, tailTokens] = parseBlock(tailTokens, tag);\n            tag.children = tag.children.concat(nChildren)\n        }\n        if (check('TEXT', tailTokens)) {\n            let nChildren = [];\n            [nChildren, tailTokens] = eat('TEXT', tailTokens)\n            tag.children.push({\n                type: 3,\n                item: nChildren.value\n            })\n        }\n        if (check('EndTag', tailTokens)) {\n            [, tailTokens] = eat('EndTag', tailTokens)\n        }\n        tags.push(tag)\n    }\n    return [tags, tailTokens]\n}\n\n\nexport function parse(template) {\n    const tokens = compile(template)\n    let [node] = parseTag(tokens)\n    console.log(node)\n}\n\nfunction eat(type, tokens) {\n    if (!tokens) {\n        throw new Error('没token 可eat了 ' + type)\n    }\n    if (tokens.length && tokens[0].type === type) {\n        return [tokens[0], tokens.slice(1)]\n    }\n    throw new Error('this first node type is not ' + type + ' in template  eat method')\n}\n\n\nfunction check(type, tokens) {\n    return tokens.length && tokens[0].type === type\n}"],"names":["PreBlock","EndBlock","EqualBlock","TEXT","PreTag","EndTag","Condition","Token","constructor","type","value","compile","template","code","nodes","matchedText","node","trim","match","push","slice","length","parseEqualBlock","tokens","eTokens","eat","variable","item","parseBlock","parent","tailTokens","blocks","check","block","children","eBlock","condition","tag","parseTag","tags","text","console","log","nChildren","concat","parse","Error"],"mappings":"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"}